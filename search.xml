<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Github Pages+Hexo搭建静态博客并自定义域名</title>
    <url>/9b2b00ac.html</url>
    <content><![CDATA[<p>本文讲述的Hexo博客搭建主要是配合GitHub来进行部署，不需要购买任何服务器。<br>搭建大致分为三个流程：准备工作、安装Hexo以及部署在GitHub，下面介绍详细流程。<br>（PS：本博客就是使用Hexo+GitHub的方法搭建的）</p>
<hr>
<h1 id="一：准备工作"><a href="#一：准备工作" class="headerlink" title="一：准备工作"></a>一：准备工作</h1><h2 id="1、下载Node-js，并进行安装（详见注意事项）"><a href="#1、下载Node-js，并进行安装（详见注意事项）" class="headerlink" title="1、下载Node.js，并进行安装（详见注意事项）"></a>1、下载<a href="https://nodejs.org/en/">Node.js</a>，并进行安装（详见注意事项）</h2><blockquote>
<p>1.双击打开安装包<br> 2.疯狂点击下一步进行安装</p>
</blockquote>
<span id="more"></span>

<h2 id="2、下载Git，并进行安装"><a href="#2、下载Git，并进行安装" class="headerlink" title="2、下载Git，并进行安装"></a>2、下载<a href="https://git-scm.com/">Git</a>，并进行安装</h2><blockquote>
<p>依旧按照上述步骤进行安装</p>
</blockquote>
<h1 id="二、启用Github-Pages"><a href="#二、启用Github-Pages" class="headerlink" title="二、启用Github Pages"></a>二、启用Github Pages</h1><h2 id="申请github账号"><a href="#申请github账号" class="headerlink" title="申请github账号"></a>申请<a href="https://www.github.com/">github</a>账号</h2><p>这里xxx填写你的github账户名称。如图：<br><img src="https://pic1.zhimg.com/80/v2-a761fd5075def14d3d4f86f79ac96e00_720w.jpg" alt=" _config.yml 文件"><br><img src="https://pic4.zhimg.com/80/v2-92c1ec388326d59f35cadb260543896f_720w.jpg" alt=" _config.yml 文件"></p>
<h2 id="创建一个新的仓库"><a href="#创建一个新的仓库" class="headerlink" title="创建一个新的仓库"></a>创建一个新的仓库</h2><p>命名为【你的用户名】.github.io<br><img src="https://pic1.zhimg.com/80/v2-a6e50750d8df0d0a4ef24a5229300140_720w.jpg" alt="示例"><br><img src="https://pic2.zhimg.com/80/v2-d8c2ec23f78635dcf9873c202f8aebdd_720w.jpg" alt="示例"></p>
<h1 id="三、安装Hexo"><a href="#三、安装Hexo" class="headerlink" title="三、安装Hexo"></a>三、安装Hexo</h1><ul>
<li>打开<code>Node.js</code>下的<code>command prompt</code>面板，分别输入以下命令（检测软件配置是否安装成功）<blockquote>
<p>输出了版本号，那么证明配置成功<br>如果没有版本号，请重新安装node.js，检查是否勾选Add to Path，或者手动为node.js添加环境变量</p>
</blockquote>
</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure>

<ul>
<li>安装hexo和hexo服务器模块</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br><span class="line">npm install hexo-server --save</span><br></pre></td></tr></table></figure>

<ul>
<li><p>生成博客文件夹</p>
<blockquote>
<p>直接在自己心仪的路径上右键生成文件夹，名称随意<br>例如： D:\hexo</p>
</blockquote>
</li>
<li><p>切换command prompt的目录到新建的hexo文件路径，命令如下<br><code>cd D:\hexo</code></p>
</li>
<li><p>执行<code>hexo init</code>命令，进行博客初始化</p>
</li>
<li><p>测试hexo是否安装成功：</p>
</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo new test</span><br><span class="line">hexo clean</span><br><span class="line">hexo s</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>

<blockquote>
<p>其中hexo new test表示新建一篇名为test的博文，hexo g表示生成，是hexo generate的简写，hexo s在本地运行hexo服务器，是hexo server的简写。<br> 成功后会有如下提示，进入 <a href="http://localhost:4000/">http://localhost:4000</a> 即可看到刚刚生成的网页<br><img src="https://pic1.zhimg.com/80/v2-813612ad36af17b81ca742b8396e9564_720w.jpg" alt="Hexo 示例" title="Hexo 示例"><br>以下为配置完成后的样子，可能和你生成的页面不同，如果想配置和我一样的hexo可以继续阅读我的其他post。</p>
</blockquote>
<h1 id="三、配置到Github-Pages"><a href="#三、配置到Github-Pages" class="headerlink" title="三、配置到Github Pages"></a>三、配置到Github Pages</h1><p>之前的操作只是在本地实现了我们的博客，如何推送到github pages呢？</p>
<ul>
<li><p>首先，打开博客目录下的 _config.yml 文件<br><img src="http://www2.zgtech.top/?/images/2022/07/09/7o1Ak1pvEy/Hexo%20%E7%A4%BA%E4%BE%8B.png" alt=" _config.yml 文件" title="_config.yml 文件"></p>
</li>
<li><p>使用 ctrl+f 搜索deploy，并添加以下代码。注意！把xxx改为之前在github配置的名字即可。</p>
</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">- type: git</span><br><span class="line"> repo: https://github.com/xxx/xxx.github.io.git</span><br><span class="line"> branch: master</span><br></pre></td></tr></table></figure>


<ul>
<li><p>接下来，安装<code>hexo-deployer-git</code>插件<br><code>npm install hexo-deployer-git --save</code></p>
</li>
<li><p>最后就可以推送我们的网页到github啦！</p>
</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo g </span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>

<h1 id="四、完善"><a href="#四、完善" class="headerlink" title="四、完善"></a>四、完善</h1><h2 id="访问网页"><a href="#访问网页" class="headerlink" title="访问网页"></a>访问网页</h2><p>如果之前的步骤都是正确的话，那么恭喜你！你已经可以访问你的网页了！</p>
<p>比如我的网页： <a href="https://zigetech.github.io/">zigetech.github.io</a></p>
<p>把zigetech改成你的github用户名即可</p>
<h2 id="绑定你自己的域名（可选）"><a href="#绑定你自己的域名（可选）" class="headerlink" title="绑定你自己的域名（可选）"></a>绑定你自己的域名（可选）</h2><ul>
<li>如果你已经拥有你自己的域名的话那是最好，如果你想购买一个域名，可以去<a href="https://dnspod.cloud.tencent.com/">腾讯云</a>，购买。<br>如果你不想花钱还想（<del>白嫖</del>）用自定义域名的的话，可以参考我的另一篇<a href="https://www.zigecn.eu.org/65fc21bd.html">博文</a>进行申请。</li>
</ul>
<p>由于我的域名使用的是<a href="https://dash.cloudflare.com/8082e5ab771bb1a1c2b3fa66c1248a59">Cloudflare</a>，接下来我会演示如何绑定你的github pages到Cloudflare，其他域名商操作应该也是雷同的。</p>
<ul>
<li><p>登录你的Cloudflare后台，点击<code>DNS</code>.添加一条CNAME记录，如图：<br><img src="http://www2.zgtech.top/?/images/2022/07/09/eZjlLhU2Fm/DNS%E8%A7%A3%E6%9E%90.png" alt="DNS解析"></p>
</li>
<li><p>其中CNAME的值就填写你的github page的值（也就是上文你注册过的仓库的名字），<br>![DNS解析](<a href="https://pic2.zhimg.com/80/v2-214e0d6b077b908c1dd9adc044996505_720w.jpg">https://pic2.zhimg.com/80/v2-214e0d6b077b908c1dd9adc044996505_720w.jpg</a> “DNS解析”)</p>
</li>
<li><p>最后一步，在你本地 /source 文件夹下添加一个名为CNAME的文件（注意，此文件没有后缀），在文件中里面写上你的域名即可。<br><img src="http://www2.zgtech.top/?/images/2022/07/09/INCvyI6930/CNAME%E6%96%87%E4%BB%B6%E5%A1%AB%E5%86%99.png" alt="CNAME文件填写"></p>
</li>
<li><p>再次执行deploy</p>
</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo g </span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>

<ul>
<li>稍等几分钟，你就可以用自己的域名访问你的网站啦！<br><img src="http://www2.zgtech.top/?/images/2022/07/09/GbOwqJJfx6/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2.png" alt="我的博客"></li>
</ul>
<h1 id="最后的最后"><a href="#最后的最后" class="headerlink" title="最后的最后"></a>最后的最后</h1><p>本文介绍了基本的hexo + github page的部署及实现，如果有任何问题，欢迎留言！</p>
<p>本文作者：Eric Zige<br />本文地址： <a href="https://www.zigecn.eu.org/9b2b00ac.html">https://www.zigecn.eu.org/9b2b00ac.html</a> <br />版权声明：本博客所有文章除特别声明外，均采用CC BY-NC-SA 4.0</div>许可协议。转载请注明出处！</p>
]]></content>
  </entry>
  <entry>
    <title>Office 365 E5 账号申请及永久续期教程</title>
    <url>/ee2a51ed.html</url>
    <content><![CDATA[<blockquote>
<p>续订成功通知<br><img src="http://pdsqzlt.tk/zz.jpg" alt="续订成功" title="续订成功"></p>
</blockquote>
<span id="more"></span>
<h1 id="申请步骤"><a href="#申请步骤" class="headerlink" title="申请步骤"></a><strong>申请步骤</strong></h1><p>1.访问申请链接（链接在文末或评论区给出），点击立即加入开始申请账号<br><img src="https://pic3.zhimg.com/80/v2-c34764ebd92153570bd0a490ece3a536_720w.jpg" alt="1.1" title="1.1"></p>
<p>2.登录账号<br><img src="https://pic4.zhimg.com/80/v2-6f06aa42431667f523e24b83af18aa9f_720w.jpg" alt="1.2" title="1.2"></p>
<p>3.注册Office 365 开发人员。下面两个勾选可以只勾选第一个，减少广告，点击下一步继续<br><img src="https://pic2.zhimg.com/80/v2-8cb2d3c57c22f542eba58a01210dc165_720w.jpg" alt="1.3" title="1.3"></p>
<p>4.随便填一下，点击加入(最好全选）<br><img src="https://pic4.zhimg.com/80/v2-e51daf2827925a9073e59cc65220de97_720w.jpg" alt="1.4" title="1.4"></p>
<p>5.之后的页面中会提示你没有订阅，点击申请一个订阅。在弹出的页面中输入一个你能记得住的用户名和域，然后记住你的”用户名@域.onmicrosoft.com”，点继续。<br><img src="https://pic3.zhimg.com/80/v2-22ebe2256bc71ed47a0a9cd7e7686e4a_720w.jpg" alt="1.5" title="1.5"></p>
<p>6.验证手机号，这一步会调用谷歌的验证系统，准备好上网工具<br><img src="https://pic2.zhimg.com/80/v2-d4ddf2e1aedc6df0311567b8063a5669_720w.jpg" alt="1.6" title="1.6"></p>
<p>7.现在，我们已经申请好了E5订阅了，并一次性申请了25个用户许可证。如果你只是自己用，现在已经可以使用”用户名@域.onmicrosoft.com”和之前设置的密码登录你电脑上的Office了。<br><img src="https://pic4.zhimg.com/80/v2-7c448e8c00883abfdf8cf7e925cb12c3_720w.jpg" alt="1.7" title="1.7"></p>
<h1 id="分配账号与安装365"><a href="#分配账号与安装365" class="headerlink" title="分配账号与安装365"></a><strong>分配账号与安装365</strong></h1><p>之前说过E5订阅有25个用户许可证，我们可以点击转到订阅或者登录 <a href="https://www.office.com/?auth=2">官网</a> 分配账号给自己的朋友<br>这里一定要加上 <code>?auth=2</code> ，否则会进入「个人版」office365的登录界面，无法使用这里的「组织账号」登录<br>点击<code>安装office</code>可以安装office365，默认会安装所有的软件。若有自定义的需求，可以使用office tool plus安装。<br><img src="https://pic3.zhimg.com/80/v2-845aa0f5cabe542d1a98ef646fc20aa6_720w.jpg" alt="2.1" title="2.1"></p>
<p>点击下方的<code>管理</code>可以分配账号，进入新页面点击<code>用户</code>——<code>活跃用户</code>——<code>添加用户</code>即可。</p>
<h1 id="设置5T网盘容量"><a href="#设置5T网盘容量" class="headerlink" title="设置5T网盘容量"></a><strong>设置5T网盘容量</strong></h1><p>默认onedrive容量是1T，但是可以通过设置更改为5T。 </p>
<p>1.点击365主页的onedrive图标，若提示“我们目前还在 OneDrive 上设置文件”可以先跳过本步骤，先完成下面的操作。<br>2.打开 <a href="https://admin.onedrive.com/?v=StorageSettings">官网</a> ，也可以在<code>管理中心</code>——<code>所有管理中心</code>——<code>onedrive</code>中找到，更改默认存储为5012GB。<br><img src="https://pic2.zhimg.com/80/v2-bee194f150eefdd27e1982998c9a038d_720w.jpg" alt="3.1" title="3.1"></p>
<h1 id="无限续期-私人网盘"><a href="#无限续期-私人网盘" class="headerlink" title="无限续期+私人网盘"></a><strong>无限续期+私人网盘</strong></h1><p>1、进入网站<br><a href="https://blog.csdn.net/qq_33212020/article/details/119747634">MS365 E5 Renew X 官方文档</a><br>2.根据官网文档进行配置</p>
<p>本文作者：Eric Zige<br />本文地址： <a href="https://www.zigecn.eu.org/ee2a51ed.html">https://www.zigecn.eu.org/ee2a51ed.html</a> <br />版权声明：本博客所有文章除特别声明外，均采用CC BY-NC-SA 4.0</div>许可协议。转载请注明出处！</p>
]]></content>
  </entry>
  <entry>
    <title>SSL证书为什么价格差距那么大？（附免费SSL证书）</title>
    <url>/166d9192.html</url>
    <content><![CDATA[<p><a href="https://baike.baidu.com/item/SSL%E8%AF%81%E4%B9%A6/5201468">SSL证书</a>市场品牌和种类众多，用户在选择证书的时候，也能随心所欲的购买到心仪的证书品牌类型。<br>但是也有不少用户在选购的时候，也不禁有疑问：不同的证书品牌和类型为什么价格相差如此之大？</p>
<p>确实，有的证书很便宜，甚至是免费使用，但是有的证书价格却高的出奇。出现这样情况的原因主要是由于品牌和证书类型，以及证书的售后服务方面的原因导致的。</p>
<h1 id="证书价格差异大的原因"><a href="#证书价格差异大的原因" class="headerlink" title="证书价格差异大的原因"></a>证书价格差异大的原因</h1><h2 id="1、证书品牌不同"><a href="#1、证书品牌不同" class="headerlink" title="1、证书品牌不同"></a>1、证书品牌不同</h2><span id="more"></span>
<p>不同品牌的SSL证书在价格上差距较大，主要是因为证书的产品质量有所区别。部分大品牌证书厂商证书签发历史悠久，对产品有较强的专业研究，安全保密性有保障。<br>同时产品的兼容性等也较好，对目前市场上的主流浏览器有良好的兼容性，用户在安装部署后浏览器地址栏都会显示地址是安全提示。</p>
<h2 id="2、证书类型不同"><a href="#2、证书类型不同" class="headerlink" title="2、证书类型不同"></a>2、证书类型不同</h2><p>DV、OV、EV是目前使用较多的SSL证书类型，其中DV证书的签发验证流程最为简单，用户在申请的时候仅验证域名信息，签发速度快，价格是这三类证书中最低的。<br>OV和EV证书验证流程则是相对复杂些，相较于DV证书，增加了人工核验环节，严谨性可以得到保证。<br>另外，EV证书在部署安装后，在浏览器的地址栏会显示用户公司的名称信息，网站的可信度进一步提升。验证流程的严谨和功能的多样化使得EV证书成为这几种证书中价格价格最高的。</p>
<p>除此之外，每种证书类型根据域名数量的不同，价格也会有区别。保护单域名的价格较低，而保护多域名和通配符价格较高。</p>
<h2 id="3、售后保障不同"><a href="#3、售后保障不同" class="headerlink" title="3、售后保障不同"></a>3、售后保障不同</h2><p>从经济学角度来说，证书也属于商品。而在市场经济活动中，所有商品在出售以后，难免会涉及售后的问题。</p>
<p>SSL证书特别之处在于，它是用来保护用户的数据信息安全，一旦出现问题给客户造成的损失难以预估。所以，售后保障也是各大证书厂商极为重视的问题。<br>一些价格较高的证书品牌，证书厂商都已经为其投入了高额的赔付保障，真正能做到让用户售后无忧。</p>
<h1 id="常见的证书价格"><a href="#常见的证书价格" class="headerlink" title="常见的证书价格"></a>常见的证书价格</h1><p>这里从腾讯云官网里找到了一些SSL证书的价格，均指首年价格，后续订阅的价格得花更多的钱。</p>
<table>
<thead>
<tr>
<th align="right">证书品牌</th>
<th align="right">支持域名</th>
<th align="right">证书型号</th>
<th align="right">单价</th>
</tr>
</thead>
<tbody><tr>
<td align="right">DNSPod</td>
<td align="right">单个域名</td>
<td align="right">域名型（DV）SSL 证书</td>
<td align="right">560元/年</td>
</tr>
<tr>
<td align="right">SecureSite</td>
<td align="right">单个域名</td>
<td align="right">企业型（OV）SSL 证书</td>
<td align="right">5000元/年</td>
</tr>
<tr>
<td align="right">GeoTrust</td>
<td align="right">单个域名</td>
<td align="right">企业型（OV）SSL 证书</td>
<td align="right">2850元/年</td>
</tr>
<tr>
<td align="right">GlobalSign</td>
<td align="right">单个域名</td>
<td align="right">企业型（OV）SSL 证书</td>
<td align="right">3728元/年</td>
</tr>
<tr>
<td align="right">WoTrus</td>
<td align="right">单个域名</td>
<td align="right">域名型（DV）SSL 证书</td>
<td align="right">488元/年</td>
</tr>
<tr>
<td align="right">DNSPod（SM2）</td>
<td align="right">单个域名</td>
<td align="right">域名型（DV）SSL 证书</td>
<td align="right">880元/年</td>
</tr>
</tbody></table>
<p>总之，对我这个草根站长来说，就是“买不起，真的买不起”。</p>
<h1 id="非常良心国产SSL品牌——Let’s-Encrypt"><a href="#非常良心国产SSL品牌——Let’s-Encrypt" class="headerlink" title="非常良心国产SSL品牌——Let’s Encrypt"></a>非常良心国产SSL品牌——<a href="https://www.mianfeissl.com/">Let’s Encrypt</a></h1><p>Let’s Encrypt目前已基于全球可信根，创新推出全新一代可自动化部署的自主品牌SSL证书。推出了90天的试用，并且可以无限续签。<br>这对喜欢白嫖的草根站长来说就很好了。<br><img src="http://www2.zgtech.top/?/images/2022/07/09/yRkU5eGFT2/Let%27s%20Encrypt.png" alt="Let&#39;s Encrypt"></p>
<p>免费版的包括<code>单域名证书</code>、<code>通配符证书</code>、<code>多域名证书</code>。<br><img src="http://www2.zgtech.top/?/images/2022/07/09/VkwNPVrw43/Let%27s%20Encrypt2.png" alt="Let&#39;s Encrypt"></p>
<p>本文作者：Eric Zige<br />本文地址： <a href="https://www.zigecn.eu.org/166d9192.html">https://www.zigecn.eu.org/166d9192.html</a> <br />版权声明：本博客所有文章除特别声明外，均采用CC BY-NC-SA 4.0</div>许可协议。转载请注明出处！</p>
]]></content>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/4a17b156.html</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<span id="more"></span>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
<p>本文作者：Eric Zige<br />本文地址： <a href="https://www.zigecn.eu.org/4a17b156.html">https://www.zigecn.eu.org/4a17b156.html</a> <br />版权声明：本博客所有文章除特别声明外，均采用CC BY-NC-SA 4.0</div>许可协议。转载请注明出处！</p>
]]></content>
  </entry>
  <entry>
    <title>使用Github Pages和Gridea搭建个人博客</title>
    <url>/85a4b1c9.html</url>
    <content><![CDATA[<p>之前我写过一个关于如何使用Hexo博客系统搭建静态博客的博文：<a href="https://www.zigecn.eu.org/9b2b00ac.html">博客原文</a></p>
<p>有同学跟我说像Hexo这样的静态博客使用不方便，因为需要熟悉Git命令，对非计算机专业同学来说很不友好，增加了其学习成本。<br>不过我后来又发现了一个超级棒的静态博客写作客户端——Gridea。即使是非计算机同学，也能愉快地构建并管理博客。</p>
<p>本文，我就来教大家如何来使用Github Pages和Gridea来搭建个人博客~</p>
<h1 id="关于Github-Pages"><a href="#关于Github-Pages" class="headerlink" title="关于Github Pages"></a>关于Github Pages</h1><p>官方文档：</p>
<blockquote>
<p>GitHub Pages 是一项静态站点托管服务，它直接从 GitHub 上的仓库获取 HTML、CSS 和 JavaScript 文件，（可选）通过构建过程运行文件，然后发布网站。</p>
</blockquote>
<span id="more"></span>
<p>emmm，总之，GitHub Pages会发布您推送到代码仓库的任何静态文件，你可以创建自己的静态文件或使用静态站点生成器（如Hexo）为你构建站点，然后就可以使用【用户名】.github.io域名访问你的博客网站了。<br>对了，是免费的哦~</p>
<h1 id="关于Gridea"><a href="#关于Gridea" class="headerlink" title="关于Gridea"></a>关于Gridea</h1><p>官方文档：</p>
<blockquote>
<p>Gridea 是一个静态博客写作客户端，帮助你更容易地构建并管理博客或任何静态站点。</p>
</blockquote>
<p><a href="https://gridea.dev/">Gridea</a>的方便就在于可以使用客户端直接编写代码，然后只要点击按钮就能发布，非常人性化。重要的是，其提供了Windows、Mac OS和Linux三种操作系统的客户端。Gridea的界面是这样的：<br><img src="https://pic3.zhimg.com/80/v2-700a119278166a70b2d352abe7c70d9e_720w.jpg" alt="Gridea" title="Gridea"><br>怎么样？是不是非常小清新？是不是迫不及待地想要开始了？！</p>
<h1 id="开始部署"><a href="#开始部署" class="headerlink" title="开始部署"></a>开始部署</h1><h2 id="1-注册Github账号"><a href="#1-注册Github账号" class="headerlink" title="1.注册Github账号"></a>1.注册Github账号</h2><p>先去全球最大的同性恋交流平台——<a href="https://www.github.com/">Github</a>上注册一个账号，登录。</p>
<h2 id="2-创建仓库token"><a href="#2-创建仓库token" class="headerlink" title="2.创建仓库token"></a>2.创建仓库token</h2><p>登录后，先进入<a href="https://github.com/settings/tokens/new">创建token</a>的页面，然后填写Note（相当于是个提示吧，因为你可能有多个token，便于区分用途），勾上repo即可，往下拉点Generate token。<br><img src="https://pic2.zhimg.com/80/v2-fa7f773e1925f1289bea9d53cc7aa20d_720w.jpg" alt="创建仓库token" title="创建仓库token"><br>然后点这个图标先复制，先保存起来吧，不然你下次再点开就看不到了，得重新生成<br><img src="https://pic3.zhimg.com/80/v2-8ea52e82214c58feed2958471add7c56_720w.jpg" alt="复制仓库token" title="复制仓库token"></p>
<h2 id="3-创建公共仓库"><a href="#3-创建公共仓库" class="headerlink" title="3 创建公共仓库"></a>3 创建公共仓库</h2><p>点击右上角头像左边的+号，然后选择<code>New repository</code>。<br><img src="https://pic1.zhimg.com/80/v2-c28e327d193e1d1cfe071519fcbf50c8_720w.jpg" alt="创建公共仓库" title="创建公共仓库"></p>
<p>填写好信息，点下面的<code>Create repository</code>。</p>
<blockquote>
<p>注意：Repository name填【你的用户名】./github.io，Description可选填。<br><img src="https://pic3.zhimg.com/80/v2-98e889c5e83fdf57878aa8b4177bee42_720w.jpg" alt="创建公共仓库" title="创建公共仓库"><br>创建成功后，就是只有一个只有README.md的仓库，这时你就可以在浏览器访问【你的用户名】.github.io，可以看到内容，就可以了。</p>
</blockquote>
<h1 id="运行Gridea"><a href="#运行Gridea" class="headerlink" title="运行Gridea"></a>运行Gridea</h1><p>去<a href="https://gridea.dev/">Gridea官网</a>下载你操作系统对应的安装包，安装，运行。第一次使用要进行配置，点击<code>远程</code>进行配置。<br><img src="https://pic4.zhimg.com/80/v2-da2e52949c2d435919ead1bb8dde4c03_720w.jpg" alt="Gridea配置" title="Gridea配置"></p>
<blockquote>
<p>平台要选<code>Github Pages</code>，域名和仓库名称填Github的仓库名，分支填<code>main</code>（原先的<code>master</code>有争议，现在已全面改为<code>main</code>），令牌就是刚刚要你复制的token。另外你要绑定域名的话，CNAME就填你的域名。<br>如果你不会自定义域名的话，请参考这篇博客：<a href="https://www.zigecn.eu.org/9b2b00ac.html">使用Hexo+Github搭建博客，并自定义域名</a></p>
</blockquote>
<p>填写完成后，点<code>保存</code>，然后检测一下<code>远程连接</code>，没问题的话就点左下角的<code>同步</code>。<br>这样你就可以访问<code>xxx.github.io</code>来打开你的博客网站了，如果你设置了CNAME，就是访问你的域名。文章的管理就可以直接在这个客户端上操作，同时也可以选择你喜欢的主题，自己多去研究研究吧，哈哈。另外，附上一些答疑。</p>
<p>大家可以看到，我写的这个教程主要是发的截图，并没有写一行代码，这就是使用Gridea客户端的好处。</p>
<p>OK，接下来你就自己去折腾你的博客吧~，有问题敬请评论。</p>
<p>本文作者：Eric Zige<br />本文地址： <a href="https://www.zigecn.eu.org/85a4b1c9.html">https://www.zigecn.eu.org/85a4b1c9.html</a> <br />版权声明：本博客所有文章除特别声明外，均采用CC BY-NC-SA 4.0</div>许可协议。转载请注明出处！</p>
]]></content>
  </entry>
  <entry>
    <title>免费申请EU.org顶级域名</title>
    <url>/65fc21bd.html</url>
    <content><![CDATA[<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>“EU.org, free domain names since 1996”，至今已有二十多年的历史。<br>eu.org是欧盟组织下面的域名，EU代表欧盟，Paul Mockapetris在1996年的9-10月份创建了这个域名的DNS服务器。<br>现在对个人和组织（没见提是不是非盈利性）是免费注册的。貌似cloudflare，hstspreload.org 等大公司认可为顶级域名。</p>
<span id="more"></span>
<h1 id="申请过程"><a href="#申请过程" class="headerlink" title="申请过程"></a>申请过程</h1><p>1、打开申请页面 <a href="https://nic.eu.org/arf/">https://nic.eu.org/arf/</a> 注册账号<br><img src="https://raw.githubusercontent.com/qiantigers/onetu/master/20210107181606.png" alt="注册账号" title="注册账号"></p>
<p>2、尽量如实地填写资料，可以参考一下我是怎么写的。<br><img src="https://raw.githubusercontent.com/qiantigers/onetu/master/20210107181750.png" alt="填写资料" title="填写资料"></p>
<p>3、登录，用户名在你的邮件里<br><img src="https://raw.githubusercontent.com/qiantigers/onetu/master/20210107182311.png" alt="登录" title="登录"></p>
<p>4、注册你想要的域名<br><img src="https://raw.githubusercontent.com/qiantigers/onetu/master/20210107182530.png" alt="注册" title="注册"></p>
<p>5、填入相关的域名信息<br>(1)输入完整的域名，我输入的是zigecn.eu.org，前缀&gt;=4。当然，域名不仅仅是eu.org，更多详情可以看这个链接 👉 <a href="https://nic.eu.org/opendomains.html">域名列表</a></p>
<p>(2)需要进行DNS解析，在这里我使用的是<a href="https://www.cloudns.net/">clouDNS</a>。<br><img src="https://cdn.jsdelivr.net/gh/qiantigers/onetu/20210107184308.png" alt="DNS解析" title="DNS解析"><br><img src="https://cdn.jsdelivr.net/gh/qiantigers/onetu/20210107185405.png" alt="DNS解析" title="DNS解析"></p>
<p>6、信息检查，如果出现“Done”的字眼，则表明成功。<br><img src="https://cdn.jsdelivr.net/gh/qiantigers/onetu/20210107184719.png" alt="完毕" title="完毕"></p>
<p>7、耐心等待审核通过，会有邮件通知。大概3–14天。</p>
<h1 id="将已经申请好的eu域名托管到Cloudflare"><a href="#将已经申请好的eu域名托管到Cloudflare" class="headerlink" title="将已经申请好的eu域名托管到Cloudflare"></a>将已经申请好的eu域名托管到Cloudflare</h1><p>登入<a href="https://nic.eu.org/arf/en/">管理台</a>,将名称服务器改为cloudflare的就行了</p>
<p>本文作者：Eric Zige<br />本文地址： <a href="https://www.zigecn.eu.org/65fc21bd.html">https://www.zigecn.eu.org/65fc21bd.html</a> <br />版权声明：本博客所有文章除特别声明外，均采用CC BY-NC-SA 4.0</div>许可协议。转载请注明出处！</p>
]]></content>
  </entry>
  <entry>
    <title>这里是子哥の小破站</title>
    <url>/dfdac00d.html</url>
    <content><![CDATA[<h1 id="你好鸭，我是子哥"><a href="#你好鸭，我是子哥" class="headerlink" title="你好鸭，我是子哥 ~"></a>你好鸭，我是子哥 ~</h1><p><img src="https://raw.githubusercontent.com/lzh2665692/image/master/zige.jpg" alt="blockchain" title="区块链"><br>我，一个啥也不懂的小白，终于花了两天时间，搭建了我的个人博客，由 <strong>Hexo</strong> 强力驱动，使用 <a href="https://github.com/Shen-Yu/hexo-theme-ayer">Ayer</a> 作为主题。</p>
<hr>
<p>下面，我想记录一下我的折腾历程~</p>
<span id="more"></span>
<h1 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h1><p>其实我早就有建站的想法了，但是我清楚地认识到一个事实，那就是<strong>我只会用Wordpress</strong>。<br>举个例子：我们班上有个技术大佬——段某（我这次构建博客也找他交流过技术），在听说我不会 HTML 之后，是这样说的：</p>
<blockquote>
<p>html，这东西狗都会</p>
</blockquote>
<h2 id="好家伙，合着我应该是还没出生？！"><a href="#好家伙，合着我应该是还没出生？！" class="headerlink" title="好家伙，合着我应该是还没出生？！"></a>好家伙，合着我应该是<strong>还没出生</strong>？！</h2><p>于对我技术能力的自知之明，因此建站这事儿我都准备放在高中再研究了。<br>后来有天，段某有了一个 Hexo 博客：<a href="https://testgifts.tech/">https://testgifts.tech/</a><br>很快啊，我啪的一下就点进去了，看上去很漂亮~<br><img src="https://i.loli.net/2021/07/18/O6ugHvdFcoNwDaT.png" alt="段某的博客" title="段某的博客"></p>
<blockquote>
<p>截图上是他已经切换到 Typecho 的网页。<br>所以呢，我萌生了做个博客的想法。但也只是“想法”而已。至少在我的固有思维中，建一个个人博客，是一件很麻烦的事情。<br>不过这两天我放假了。尽管高二升高三的暑假很短，但我想趁这段时间试试。一试才知道，搭建个 Hexo 博客<strong>非常简单</strong>。</p>
</blockquote>
<h1 id="尾声"><a href="#尾声" class="headerlink" title="尾声"></a>尾声</h1><p>这个暑假我会更新各种技巧，敬请期待。</p>
<p>本文作者：Eric Zige<br />本文地址： <a href="https://www.zigecn.eu.org/dfdac00d.html">https://www.zigecn.eu.org/dfdac00d.html</a> <br />版权声明：本博客所有文章除特别声明外，均采用CC BY-NC-SA 4.0</div>许可协议。转载请注明出处！</p>
]]></content>
  </entry>
</search>
